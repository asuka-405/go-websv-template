#!/bin/zsh

PATH=$PATH:$HOME/go/bin

# Define reusable help function
function help() {
  cat <<EOF
Usage: $0 <command> [arguments]

Commands:
  dev            Build and start the test server with hot-reload using reflex
  clean          Remove the test server binary
  tidy           Run 'go mod tidy' and 'go mod vendor'
  install <pkg>  Install a package and run 'go mod tidy' and 'go mod vendor'
  tree           Display the directory tree ignoring files from .gitignore
  help           Show this help message
EOF
  exit 0
}

function setup_containers() {
  docker-compose up -d
}

# Define reusable function for installing a package
function install_package() {
  if [ -z "$1" ]; then
    echo "Usage: $0 install <package>"
    exit 1
  fi
  go get "$1"
  go mod tidy
  go mod vendor
}

# If no command is specified, show help
if [ -z "$1" ]; then
  help
fi

BINARY_NAME="erp-server"
BINARY_PATH="./bin/$BINARY_NAME"

# Handle commands
case "$1" in
  help)
    help
    ;;
  tree)
    tree --gitignore -I "vendor"
    ;;
  build)
    echo "Building binary..."
    go build -o "$BINARY_PATH" .
    echo "Binary built: $BINARY_PATH"
    ;;
  start)
    echo "Starting server..."
    "$BINARY_PATH"
    ;;
  dev)
    echo "Starting dev server with hot-reload..."
    air
    ;;
  clean)
    rm -f "$BINARY_PATH"
    echo "Binary removed: $BINARY_PATH"
    ;;
  tidy)
    go mod tidy
    go mod vendor
    ;;
  add)
    install_package "$2"
    ;;
  install | i)
    if [ -z "$2" ]; then
      echo "Usage: $0 install <package>"
      exit 1
    fi
    go install "$2"
    echo "Installed package: $2 to $GOPATH/bin"
    echo "  Ensure $GOPATH/bin is in your PATH"
    echo "  By default GOPATH is ~/go"
    ;;
  setup)
    setup_containers
    ;;
  *)
    echo "Unknown command: $1"
    exit 1
    ;;
esac

exit 0
