openapi: '3.0.3'
info:
  title: "[company] OpenAPI"
  version: '1.0'
servers:
  - url: https://dev.[company].com/api
  - url: https://uat.[company].com/api
  - url: https://prod.[company].com/api

components:
  
  parameters:
    AuthorizationHeader:
      name: Authorization
      in: header
      description: Bearer token for authentication.
      required: true
      schema:
        type: string
        example: "Bearer <Your JWToken here>"
    LogsHeader:
      name: Logs
      in: header
      description: |
        Controls the verbosity of logs included in the API response.
        Allowed values:
        - `silent`: No logs
        - `error`: Only errors
        - `warn`: Errors + warnings
        - `info`: General logs, warnings, errors
        - `debug`: Debugging details
        - `trace`: Most detailed logs
      required: false
      schema:
        type: string
        enum: ["silent", "error", "warn", "info", "debug", "trace"]
        default: "silent"
        example: "info"
    PaginationQuery:
      name: pagination
      in: query
      description: Send the pagination format for data to be received.
      required: false
      style: deepObject
      explode: true
      schema:
        type: object
        properties:
          page_number:
            type: integer
          entry_count:
            type: integer

  schemas:
    BadRequestError:
      type: object
      required:
        - status
        - error
        - message
      properties:
        status:
          type: integer
          description: HTTP status code.
          example: 400
        error:
          type: string
          description: Error type.
          example: "Bad Request"
        message:
          type: string
          description: Description of the error.
          example: "Invalid input data."
        details:
          type: object
          nullable: true
          description: Details about invalid fields.
          additionalProperties: true
          example:
            invalid_fields:
              page_number: "Must be a positive integer."
        timestamp:
          type: string
          format: date-time
          description: When the error occurred.
          example: "2025-03-09T12:34:56.789Z"
    UnauthorizedError:
      type: object
      required:
        - status
        - error
        - message
      properties:
        status:
          type: integer
          description: HTTP status code.
          example: 401
        error:
          type: string
          description: Error type.
          example: "Unauthorized"
        message:
          type: string
          description: Why authentication failed.
          example: "Missing or invalid Authorization header."
        timestamp:
          type: string
          format: date-time
          description: When the error occurred.
          example: "2025-03-09T12:34:56.789Z"
    ForbiddenError:
      type: object
      required:
        - status
        - error
        - message
      properties:
        status:
          type: integer
          description: HTTP status code.
          example: 403
        error:
          type: string
          description: Error type.
          example: "Forbidden"
        message:
          type: string
          description: Why the user is forbidden from accessing the resource.
          example: "You do not have permission to perform this action."
        timestamp:
          type: string
          format: date-time
          description: When the error occurred.
          example: "2025-03-09T12:34:56.789Z"
    NotFoundError:
      type: object
      required:
        - status
        - error
        - message
      properties:
        status:
          type: integer
          description: HTTP status code.
          example: 404
        error:
          type: string
          description: Error type.
          example: "Not Found"
        message:
          type: string
          description: What resource was not found.
          example: "User with ID '123' not found."
        timestamp:
          type: string
          format: date-time
          description: When the error occurred.
          example: "2025-03-09T12:34:56.789Z"
    InternalServerError:
      type: object
      required:
        - status
        - error
        - message
      properties:
        status:
          type: integer
          description: HTTP status code.
          example: 500
        error:
          type: string
          description: Error type.
          example: "Internal Server Error"
        message:
          type: string
          description: Generic message for unexpected errors.
          example: "An unexpected error occurred. Please try again later."
        trace_id:
          type: string
          description: Unique identifier for debugging.
          example: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
        timestamp:
          type: string
          format: date-time
          description: When the error occurred.
          example: "2025-03-09T12:34:56.789Z"
    ResponsePagination:
      type: object
      description: Pagination metadata.
      properties:
        matches:
          type: integer
          description: Total number of matching records.
        page_number:
          type: integer
        entry_count:
          type: integer
          description: Total entries on current page.
        page_count:
          type: integer
          description: Total number of traversible pages.
        next_page_number:
          type: integer
        prev_page_number:
          type: integer

  responses:
    BadRequest:
      description: "Bad Request - Invalid Input"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BadRequestError"
    Unauthorized:
      description: "Unauthorized - Invalid or Missing Token"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UnauthorizedError"
    Forbidden:
      description: "Forbidden - Insufficient Permissions"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ForbiddenError"
    NotFound:
      description: "Resource Not Found"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotFoundError"
    InternalServerError:
      description: "Internal Server Error - Unexpected Error"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InternalServerError"

paths:
  /healthz:
    get:
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
      responses:
        '200':
          description: OK
        "500":
          $ref: "#/components/responses/InternalServerError"
  /endpoint:
    get:
      summary: Endpoint summary
      operationId: operationId
      description: "Endpoint description"
          
      responses:
        "200":
          description: Response description.
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: "#/components/schemas/ResponsePagination"
                      
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
          

  "/":
    get:
      summary: "Unknown endpoint"
      description: "Returns 404 for unknown requests."
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
      responses:
        "404":
          $ref: "#/components/responses/NotFound"
    post:
      summary: "Unknown endpoint"
      description: "Returns 404 for unknown requests."
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
      responses:
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      summary: "Unknown endpoint"
      description: "Returns 404 for unknown requests."
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
      responses:
        "404":
          $ref: "#/components/responses/NotFound"
    patch:
      summary: "Unknown endpoint"
      description: "Returns 404 for unknown requests."
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
      responses:
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      summary: "Unknown endpoint"
      description: "Returns 404 for unknown requests."
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
      responses:
        "404":
          $ref: "#/components/responses/NotFound"






